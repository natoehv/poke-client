{"version":3,"sources":["components/atoms/TypeTag.tsx","components/molecule/Item.tsx","domain/services/PokeService.ts","domain/factories/PokeFactory.ts","hooks/usePokemons.ts","utils/debounce.ts","components/organism/Listing.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getColorByType","type","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","TypeTag","Chip","className","label","name","style","backgroundColor","getAvatar","sprites","other","front_default","Item","types","stats","useState","shownDetail","setShownDetail","Card","color","onClick","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","map","slot","Collapse","in","stat","base_stat","Box","display","alignItems","minWidth","width","mr","LinearProgress","value","url","PokeService","path","this","offset","limit","fetch","then","response","json","id","PokeFactory","usePokemons","search","page","setOffset","loading","setLoading","useEffect","pokemonDetails","setPokemonDetails","filttered","setFilttered","count","setCount","service","createService","filter","pokemon","includes","find","searchFilter","getPokemons","pokemons","a","Math","floor","Promise","all","results","splitted","split","pokeID","length","getPokemon","debounce","cb","h","wait","callable","args","clearTimeout","setTimeout","Listing","setPage","setSearch","handlePageChange","event","handleSearchChange","target","TextField","onChange","Pagination","shape","size","Backdrop","open","zIndex","CircularProgress","theme","createMuiTheme","palette","primary","main","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b023a28.chunk.js","sourcesContent":["import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport './TypeTag.scss'\n\nimport { Type } from '../../domain/entities/API';\n\ntype compomentProps = {\n  type?: Type;\n}\n\nconst getColorByType = (type: string) => {\n  const colors: any = {\n    normal: '#A8A77A',\n    fire: '#EE8130',\n    water: '#6390F0',\n    electric: '#F7D02C',\n    grass: '#7AC74C',\n    ice: '#96D9D6',\n    fighting: '#C22E28',\n    poison: '#A33EA1',\n    ground: '#E2BF65',\n    flying: '#A98FF3',\n    psychic: '#F95587',\n    bug: '#A6B91A',\n    rock: '#B6A136',\n    ghost: '#735797',\n    dragon: '#6F35FC',\n    dark: '#705746',\n    steel: '#B7B7CE',\n    fairy: '#D685AD',\n  };\n  return colors[type] || '';\n}\n\nfunction TypeTag({ type }: compomentProps) {\n  return (\n    type ? <Chip\n      className=\"type-tag\"\n      label={type.type.name}\n      style={{backgroundColor: getColorByType(type.type.name)}} /> : null\n  );\n}\n\nexport default TypeTag;\n","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport TypeTag from '../atoms/TypeTag';\n\nimport './Item.scss';\nimport { Sprites, Stat, Type } from '../../domain/entities/API';\n\ntype ItemProps = {\n  name: string;\n  types?: Type[];\n  sprites?: Sprites\n  stats?: Stat[]\n}\n\nconst getAvatar = (sprites: Sprites) => {\n  return sprites.other['official-artwork'].front_default || '';\n}\n\nfunction Item({ name, types = [], sprites, stats = [] }: ItemProps) {\n  const [shownDetail, setShownDetail] = useState(false);\n  const cardClick = () => {\n    setShownDetail(!shownDetail);\n  }\n  return (\n    <Card className=\"item\" color=\"primary\" onClick={cardClick}>\n      <CardActionArea color=\"primary\">\n        { sprites && <CardMedia\n          className=\"item__avatar\"\n          image={getAvatar(sprites)}\n          title={name}\n        />}\n        <CardContent>\n          <Typography className=\"item__title\" gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n            {types.map((type) =>\n              <div key={type.slot} className=\"item__chip\">\n                <TypeTag type={type} />\n              </div>)}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\n          </Typography>\n        </CardContent>\n        { <Collapse in={shownDetail}>\n          <CardContent>\n          { stats.map(({stat, base_stat}) => \n          <Box key={stat.url} display=\"flex\" alignItems=\"center\">\n            <Box minWidth={150}>\n              <Typography variant=\"body2\" color=\"textSecondary\">{`${stat.name}: ${base_stat}`}</Typography>\n            </Box>\n            <Box width=\"100%\" mr={1}>\n              <LinearProgress variant=\"determinate\" value={base_stat} />\n            </Box>\n          </Box>)}\n        </CardContent>\n        </Collapse>}\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default Item;\n","import { pokemonAPI, PokemonDetailAPI } from \"../entities/API\";\n\ntype pokemonOptions = {\n  offset?: number;\n  limit?: number;\n}\n\ntype pokeServiceProps = {\n  path: string;\n}\n\nexport interface AuthInterface {\n  getPokemons(options: pokemonOptions): Promise<pokemonAPI>;\n  getPokemon(id: string): Promise<PokemonDetailAPI>;\n}\n\n\nexport default class PokeService {\n  private path: string = '';\n  constructor({ path }: pokeServiceProps) {\n    this.path = path;\n  }\n\n  public async getPokemons({ offset = 20, limit = 20}: pokemonOptions): Promise<pokemonAPI> {\n    return fetch(`${this.path}/pokemon?offset=${offset}&limit=${limit}`)\n      .then((response) => {\n        return response.json();\n      });\n  }\n\n  public async getPokemon(id: string): Promise<PokemonDetailAPI> {\n    return fetch(`${this.path}/pokemon/${id}`)\n      .then((response) => {\n        return response.json();\n      });\n  }\n};\n","import PokeService from '../services/PokeService';\n\nexport class PokeFactory {\n  public static createService() {\n    const api = 'https://pokeapi.co/api/v2';\n    return new PokeService({ path: api });\n  }\n}","import { useState, useEffect } from 'react';\nimport { PokemonDetailAPI } from '../domain/entities/API';\nimport { PokeFactory } from '../domain/factories/PokeFactory'\n\ntype hookProps = {\n  search?: string;\n  page?: number;\n}\n\nconst usePokemons = ({ search = '', page = 1 }: hookProps ) => {\n  const limit = 20;\n  const [offset, setOffset] = useState(limit * page);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setOffset(page * limit);\n  }, [page]);\n\n  const [pokemonDetails, setPokemonDetails] = useState<Array<PokemonDetailAPI>>([]);\n  const [filttered, setFilttered] = useState<Array<PokemonDetailAPI>>([]);\n\n  const [count, setCount] = useState(0);\n  const service = PokeFactory.createService();\n\n  const searchFilter = (search: string, pokemon: PokemonDetailAPI) => {\n    return pokemon.name.includes(search)\n      || (pokemon.types && pokemon.types.find(type => type.type.name.includes(search)))\n  }\n\n  /** local filter */\n  useEffect(() => {\n    if (search !== '') {\n      setFilttered(pokemonDetails.filter((pokemon) => searchFilter(search, pokemon)))\n    } else {\n      setFilttered(pokemonDetails)\n    }\n  }, [search, pokemonDetails]);\n\n  useEffect(() => {\n    setLoading(true);\n    service.getPokemons({ offset, limit}).then(async (pokemons) => {\n      setCount(Math.floor(pokemons.count / limit))\n      const pokemonDetails = await Promise.all(pokemons.results.map(({ url }) => {\n        const splitted = url.split('/');\n        const pokeID = splitted[splitted.length-2];\n        return service.getPokemon(pokeID).then((pokemon) => {\n          setLoading(false);\n          return pokemon;\n        });\n      }))\n      setPokemonDetails(pokemonDetails)\n    });\n  }, [offset, service]);\n\n  return {\n    count,\n    filttered,\n    loading,\n  }\n}\n\nexport default usePokemons;\n","const debounce = <T extends Function>(cb: T, wait = 20) => {\n  let h: NodeJS.Timeout;\n  let callable = (...args: any) => {\n      clearTimeout(h);\n      h = setTimeout(() => cb(...args), wait);\n  };\n  return (callable as any) as T;\n}\n\nexport default debounce;\n","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Item from '../molecule/Item';\nimport usePokemons from '../../hooks/usePokemons';\nimport './Listing.scss';\nimport debounce from '../../utils/debounce';\n\nfunction Listing({ name }: any) {\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState('');\n  \n  const {filttered, count, loading} = usePokemons({ search, page });\n  const handlePageChange = (event: any, value: number) => {\n    setPage(value);\n  };\n\n  const handleSearchChange = debounce((event: any) => {\n    setSearch(event.target.value);\n  }, 200);\n\n  return (\n    <div className=\"listing\">\n      <div className=\"listing__search\">\n        <TextField className=\"listing__search-input\" label=\"Quick Filter\" onChange={handleSearchChange}/>\n      </div>\n      <div className=\"listing__pagination\">\n        <Pagination count={count} page={page} onChange={handlePageChange} variant=\"outlined\" shape=\"rounded\" size=\"large\" color=\"primary\"/>\n      </div>\n      <div className=\"listing__items\">\n        {filttered.map(({ name, id, types, sprites, stats}) => {\n          return  <div key={id} className=\"listing__item\">\n                    <Item key={'item_'+id} name={name} types={types} sprites={sprites} stats={stats}/>\n                  </div>\n        })}\n      </div>\n      <div className=\"listing__pagination\">\n        <Pagination count={count} page={page} onChange={handlePageChange} variant=\"outlined\" shape=\"rounded\" size=\"large\"/>\n      </div>\n      <Backdrop open={loading} style={{zIndex: 2000}}>\n        <CircularProgress color=\"primary\" />\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default Listing;\n","import React from 'react';\nimport Listing from './components/organism/Listing';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ff5000',\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"app\">\n      <header className=\"app__header\">\n      </header>\n      <Listing />\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}